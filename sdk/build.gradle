apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    namespace 'org.jitsi.meet.sdk'
    compileSdk 34
    ndkVersion "25.2.9519653"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
        buildConfigField "String", "SDK_VERSION", '"1.0.0"'
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LIBRE_BUILD", "false"
            buildConfigField "boolean", "GOOGLE_SERVICES_ENABLED", "true"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LIBRE_BUILD", "false"
            buildConfigField "boolean", "GOOGLE_SERVICES_ENABLED", "true"
        }
    }

    buildFeatures {
        buildConfig true
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/java'
            java.exclude 'test/'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.fragment:fragment:1.8.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation libs.androidx.swiperefreshlayout

    api "com.facebook.react:react-android:0.75.5"
    api "com.facebook.react:hermes-android:0.75.5"

    implementation 'com.facebook.fresco:animated-gif:3.2.0'
    implementation libs.dropbox.core.sdk
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.squareup.duktape:duktape-android:1.3.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.startup:startup-runtime:1.1.0'

    implementation project(':react-native-amplitude')
    implementation project(':react-native-giphy')
    implementation(project(':react-native-google-signin')) {
        exclude group: 'com.google.android.gms'
        exclude group: 'androidx'
    }
    implementation project(':react-native-async-storage')
    implementation project(':react-native-background-timer')
    implementation project(':react-native-calendar-events')
    implementation project(':react-native-community_clipboard')
    implementation project(':react-native-community_netinfo')
    implementation project(':react-native-default-preference')
    implementation(project(':react-native-device-info')) {
        exclude group: 'com.google.firebase'
        exclude group: 'com.google.android.gms'
        exclude group: 'com.android.installreferrer'
    }
    implementation project(':react-native-gesture-handler')
    implementation project(':react-native-get-random-values')
    implementation project(':react-native-immersive-mode')
    implementation project(':react-native-keep-awake')
    implementation project(':react-native-orientation-locker')
    implementation project(':react-native-pager-view')
    implementation project(':react-native-performance')
    implementation project(':react-native-safe-area-context')
    implementation project(':react-native-screens')
    implementation project(':react-native-slider')
    implementation project(':react-native-sound')
    implementation project(':react-native-splash-screen')
    implementation project(':react-native-svg')
    implementation project(':react-native-video')
    implementation project(':react-native-webview')

    // IMPORTANT: Only include this if it exists
    if (project.findProject(":react-native-webrtc") != null) {
        api project(':react-native-webrtc')
    }

    testImplementation 'junit:junit:4.12'
}

publishing {
    publications {
        aarArchive(MavenPublication) {
            groupId 'org.jitsi.react'
            artifactId 'jitsi-meet-sdk'
            version "1.0.0"
            artifact("${project.buildDir}/outputs/aar/${project.name}-release.aar") {
                extension "aar"
            }
            pom.withXml {
                def pomXml = asNode()
                pomXml.appendNode('name', 'jitsi-meet-sdk')
                pomXml.appendNode('description', 'Jitsi Meet SDK for Android')

                def dependencies = pomXml.appendNode('dependencies')
                configurations.getByName('releaseCompileClasspath').resolvedConfiguration.firstLevelModuleDependencies.each {
                    def groupId = it.moduleGroup
                    def artifactId = it.moduleName
                    if (artifactId.startsWith('react-native-')) {
                        groupId = "org.jitsi.react"
                    }
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', groupId)
                    dependency.appendNode('artifactId', artifactId)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
    repositories {
        maven {
            url "file://${rootDir}/repo"
        }
    }
}
